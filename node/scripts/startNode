#!/bin/bash

#
# Startup a single node in our chain (tendermint for consensus and a fullnode validator)
# Arguments are packed by @ symbol (makes it easier to use an array to drive the mechanics)
#
if [ -z "$1" ]; then
	export NODENAME="OneLedger-Admin"
	export RADDR="tcp://127.0.0.1:46601"
	export TADDR="tcp://127.0.0.1:46602"
	export FADDR="tcp://127.0.0.1:46603"
	export PEERS="0@127.0.0.1:46602"
else
	export NODENAME=`echo $1 | awk -F# '{ print $1 }'`
	export RADDR=`echo $1 | awk -F# '{ print $2 }'`
	export TADDR=`echo $1 | awk -F# '{ print $3 }'`
	export FADDR=`echo $1 | awk -F# '{ print $4 }'`
	export PEERS=`echo $1 | awk -F# '{ print $5 }'`
fi

#
# For now, use local dir but needs to be fixed
#
export CMD=$OLSCRIPT

export WORK=$OLDATA/$NODENAME
export LOG=$WORK
export DATA=$WORK/tendermint

pushd $WORK > /dev/null

#
# Startup Tendermint consensus
#
pids=`pgrep -f "tendermint.*--home $DATA.*"`
if [ -z "$pids" ]

then
	echo "============================================================" >> $LOG/tendermint.log
	echo "Starting Tendermint" >> $LOG/tendermint.log
	echo "============================================================" >> $LOG/tendermint.log
	#tendermint node --proxy_app "unix://data.sock" >> $LOG/tendermint.log &
	tendermint node --home $DATA \
		--moniker $NODENAME \
		--rpc.laddr $RADDR \
		--p2p.laddr $TADDR \
		--proxy_app $FADDR \
		--p2p.persistent_peers $PEERS \
		>> $LOG/tendermint.log 2>&1 &
else
	echo "Tendermint $NODENAME is already running"
fi

#
# Startup Fullnode
#
pids=`pgrep -f "fullnode.*--name $NODENAME.*"`
if [ -z "$pids" ]

then
	echo "============================================================" >> $LOG/fullnode.log
	echo "Starting Fullnode" >> $LOG/fullnode.log
	echo "============================================================" >> $LOG/fullnode.log
	fullnode node --name $NODENAME --root $WORK/fullnode --address $FADDR >> $LOG/fullnode.log 2>&1 &
else
	echo "Fullnode $NODENAME is already running"
fi

#
# Startup Ethereum
#

#
# Startup Bitcoin
#
echo "$NODENAME is Started"

popd >> /dev/null
